from itertools import combinations

def xor_hex_texts(hex_text1, hex_text2):
    # Uzunluğu kısa olanı belirle
    min_length = min(len(hex_text1), len(hex_text2))

    # Hexadecimal stringleri integer listesine çevir
    int_values1 = [int(hex_text1[i:i+2], 16) for i in range(0, min_length, 2)]
    int_values2 = [int(hex_text2[i:i+2], 16) for i in range(0, min_length, 2)]

    # XOR işlemi
    result = [val1 ^ val2 for val1, val2 in zip(int_values1, int_values2)]

    # Sonucu hexadecimal stringe çevir
    result_hex = ''.join([hex(val)[2:].zfill(2) for val in result])

    return result_hex.upper()

# Önceden tanımlanmış 10 hexadecimal metin
hex_texts = [
    "1164595511735e5e52594255117f49565e435511745e565c5843591075595244585f5f51434911545456585e54431153434941445e5743514158481050431144595511514344115f571046425844585e56105e4211435e5c47595f5711535e5454431f106558584311594210595942445e425853505c5d491151525344425044541c1152444411545e5542105f5f451052514144444254104558541052454342545e451053425451554459105e5611445955115658555d54115f43105844421041425443545e451d55514810425358555f445856585311565e455f545044585f5f431f1065585410555557595f5945595e5e11565e534443544311435e5c545c48105e5e1144595511535e54544311445951451158504654105355545e114542555510575f431052555f44444258554210455f1110545e50525d551143545343554510525f5c5d445e58535044585f5f1e",
    "7345451052424840455f564250405949115f5e46505450494210545e525f5c405043425542105c455258115d5e4254104558505e11445959420a115945105555505c421046594558115d545359515f59425d4210575f4310545e424543595f5711595f44545743594549111c11445453595e584144554210575f431054485258505e56595f5711435453435545105a5548431d1041425e445e535e5c4210575f431050454558545e4559525145595f571145425543431d10545c545345425e5e58531151445345595e5e4210505e5510545c545345595e5e421c115458575844505c11535043591c11515f54115d5e42541e11675844595f444411514544545d4144585e5610455f1140435f47595555115111525f5c405d55455511535951435152445442584a5044585f5f1c11475410465f445c55104251481045585044115d5e5454425f1052424840455f56425040594911595f465e5c47554210455854104244445448105e56115d504459555c51455952515d10455552585f594045544311565e42114354534442585e56105559565945515d10585e575f435d5044585f5f1c1143484345555c431d10505e5510555942444359534545555510525f5c4044445044585f5f4311515651585e424411515546544242514359505c1151454450535a431f",
    "6558541055595244585f5f51434911545457585f5844585f5f10505c425f1142545654424210455f1153434941445e57435141584810504311515f105042451e11655f44585c115c50445410585e1144595511104547545e45595444591052555f444442481052424840455f5642504059491147504311595f54545555105d514357545c4810505e115143441f10725f5f434542445345595f5711575e5f5510525f5555421c115f4310534254515a595f57115549594244585e56105e5e54431d1043555d595454115f5f105242545145594759454911515f54115111545446545c5e4054541143545e4255115f5710595f4610525f55554210465f435b1f",
    "1110701043595258114459555e424810535456505f10455f11555c554357541c11555f51535c585e5610455854104359565f435f4443114345455549115f571052424840455f564250405949115142105010425358555f535410505e551050105c514558545d50445853505c115458435259415c585e541e1164595942104155434341555244584654105951421c11595f104545435e1d10585e575c44555f53545411585e47114254435451435359554343114459595f5b1151535f4444114459551152435f50545442115658555d54115f5710525f5c40444454421143545344425844481e",
    "65585410525941585442115d5444595f55115c444244115e5e4411525410435540455842545411445e105355114354534355451c11515f54115945105c4542441152541050525d5511445e1057515d5c11595f445e104558541059515f5442105e561144595511555f555c4911475844595f444411595f535e5e47555f59545e52551f",
    "11785843455f435952515d5c481011445954115c505a5e4211535e5e42455c554343115f571052424840455f5642504059491147544254105c595d5945514349115f4357505e584a5044585f5f4311515f5411575e4654425f5d545e45431f10655f5551481c1153434941445e57435141584810584311554755434946585442541111795710485f44105951475511554755431050454558545e4559525145555510485f444242555d5611524810454941595f5711511140504342475e42551c1140444252585043545411435e5d544459595f57115248105242545458441153504255105e4654421144595511795f4454425f55451c115f4310555f465e5d5f5054545411511146544258565855551044405550445410575f4310485f4442115f4155435145595f571143484345555c1c11495e45115850465410445e555f44524555555c4810444354541153434941445e574351415848",
    "7e454310565f505c11594210455f115d505a5411455854105351425952104142585e5259415c5443115f57105c5f5555435e1153434941445e5743514158481050535255424358525d5511445e1042444454545e4543115f57101110525f5c404444544211435259545e52551d101110545c545345425853505c11555f57585e545543595f571d10115f43105c514558545d50445853420b11445e1041425e56544342595e5e505c421046585e1046515f4411445e10585e525f43405e425044541052424840455f56425040594911595f1042494244545d42105e4211435e56454750425410455854491151435511545446545c5e40585e560b11515f5411445e10505e485f5f5511475844591050105351425853115c5446545c115f57105c514558545d50445853505c115d504444425844481046585e10584311595f445442544345555510585e11455f5454424244505e55595f5711445959421057514253585e5044585e56105759545c551e11",
    "705645554310525f5c405d5545595f57114559584210535f5e5b1d10455854104355505454421143595f445c551050404142545358514555114459551143545344425844481056455042505e4555544311535e5d5c5f5f1052424840455f56425040595952104142585d584458465443115143551110585e45555f54545411445e1041425e465854540b115254105047504254105e56114345515f5450425510194354534442541911535e5e424443455244585f5f43115f571042455258114043595c5945594755421011515f541152541050525d5511445e10415543565e425c1050105351425952105446505c445145595e5e115f57105f554610425359555c5542105351425555105e5e1144595558421141425e5f5743115f5710425552454359454911185e42115c50535a1045585442545f571911515f5411445955115d504459555c51455952515d10504342455c4045595e5e4210445e5555435c48595f571144595f42551140435f5e56421e11",
    "1179451042585e455d5411525410585d415e424258525d5511565e4211515f1050444551525b544211445e104355525f47554310455854105a55481e11675410595147551140435547595e45425c48105e52425543465454114459514510585611515f1050444551525b54421153505e1154544454425c595f5511445955115b5449114359514355551053491144465f1140504245595443114542595f5711435e5d5410425359555c551d104558545e114459514510425359555c551153505e5f5f45105355114354534442541e11785e47544654421d105844115942105451424911445e10525f5c55114541104659455811435258545d544311565e42114759595258115b5449114254535e4654424810584210585d415f424358525d551d104855451045585410425359555c5511594210535c5044505e455c4810585e425552454355",
    "65585410435956584510505e4247544211114354565143545d554243115f5710505e4810585e575f435d5044585f5f1c1110505e1151454450535a554310505c4355505448105951421c115111535840595543445448451042585e455d54115c54515a105f5f115155545844585f5f515d10585e575f435d5044585f5f1050525e45451045585410445e5555435c48595f5711405d51585e455549441f"
]

# XOR işlemlerinin sonuçlarını tutacak liste
result_hex_list = []

# 2'li kombinasyonları al ve xor_hex_texts fonksiyonunu çağır
for i, combo in enumerate(combinations(range(len(hex_texts)), 2), start=1):
    idx1, idx2 = combo
    result_hex = xor_hex_texts(hex_texts[idx1], hex_texts[idx2])
    result_hex_list.append(result_hex)
    print(f"{idx1} XOR {idx2} = {result_hex}")

# result_hex_list'i yazdır
print("Result Hex Listesi:", result_hex_list)

# Sıfır olan indisleri tutacak sözlük
zero_indices_dict = {}

# Her bir elemanın "2n" ve "2n+1" indislerine bak
for i, result_hex in enumerate(result_hex_list):
    for j in range(0, len(result_hex)-1, 2):
        if result_hex[j:j+2] == "00": #and result_hex[j+1:j+3] == "00":
            if i not in zero_indices_dict:
                zero_indices_dict[i] = []
            zero_indices_dict[i].extend([j, j + 1])

# Sıfır olan indisleri yazdır
for i, indices in zero_indices_dict.items():
    print(f"{i} indeksindeki XOR sonucu içerisinde {', '.join(map(str, indices))} indislerindeki değerler sıfırdır.")
